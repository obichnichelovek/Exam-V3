@page "/add"
@using MangaLibrary.Shared.Enums;
@using MangaLibrary.Shared.Models.Manga;
@inject MangaService Service
<h3>AddManga</h3>

<div class="box">
    <input @bind-value="manga.Title.English" @bind-value:event="oninput" class="elem" type="text" placeholder="English title" />
    <input @bind-value="manga.Title.Japanese" @bind-value:event="oninput" class="elem" type="text" placeholder="Japanese title" />
    <input @bind-value="manga.Title.Romaji" @bind-value:event="oninput" class="elem" type="text" placeholder="Title in romaji" />
    <hr />
    <input @bind-value="manga.Poster" @bind-value:event="oninput" class="elem" type="text" placeholder="Poster link" />
    <input @bind-value="manga.Rating" @bind-value:event="oninput" class="elem" type="number" placeholder="Rating" min="0.0" max="10.0" step="0.1" />
    <hr />
    <h3>Tags</h3>
    <div class="tag-container">
        @foreach (var tag in Service.Tags)
        {
            <a class="@tagArray[tag.ID]" title="@tag.Description" @onclick="() => IncludeTag(tag.ID)" style="margin: 2px">@tag.Name</a>
        }
    </div>
    <hr />
    <h3>Genres</h3>
    <div class="tag-container">
        @foreach (var genre in Service.Genres)
        {
            <a class="@genreArray[genre.ID]" title="@genre.Description" @onclick="() => IncludeGenre(genre.ID)" style="margin: 2px">@genre.Name</a>
        }
    </div>
</div>

@code {
    private static Manga manga = new();

    public static string[] genreArray = Enumerable.Repeat("default", 24).ToArray();
    public static string[] tagArray = Enumerable.Repeat("default", 64).ToArray();

    private const string _default = "default";
    private const string included = "included";

    public async Task Submit(Manga manga) => await Service.AddManga(manga);

    public static void IncludeGenre(int id)
    {
        switch (genreArray[id])
        {
            case _default:
                manga.Genres.Add(new Genre((Genres)id));
                genreArray[id] = included;
                break;
            default:
            case included:
                manga.Genres.Remove(new Genre((Genres)id));
                genreArray[id] = _default;
                break;
        }
    }

    public static void IncludeTag(int id)
    {
        switch (tagArray[id])
        {
            case _default:
                manga.Tags.Add(new Tag((Tags)id));
                tagArray[id] = included;
                break;
            default:
            case included:
                manga.Tags.Remove(new Tag((Tags)id));
                tagArray[id] = _default;
                break;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await Service.GetTags();
        await Service.GetGenres();
    }
}
